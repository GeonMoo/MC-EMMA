*** __init__.ase	2012-03-23 13:09:00.000000000 +0000
--- __init__.py	2012-03-23 13:12:06.000000000 +0000
***************
*** 41,46 ****
--- 41,48 ----
      XCrySDen Structure File    xsf
      Dacapo text output         dacapo-text
      XYZ-file                   xyz
+     GULP gin/res input file    gulp
+     GULP gout output file      gulp_out
      VASP POSCAR/CONTCAR file   vasp
      VASP OUTCAR file           vasp_out
      SIESTA STRUCT file         struct_out
***************
*** 171,176 ****
--- 173,186 ----
          from ase.io.xsf import read_xsf
          return read_xsf(filename, index)
  
+     if format == 'gulp':
+         from ase.io.gulp import read_gulp
+         return read_gulp(filename)
+     
+     if format == 'gulp_out':
+         from ase.io.gulp import read_gulp_out
+         return read_gulp_out(filename)
+     
      if format == 'vasp':
          from ase.io.vasp import read_vasp
          return read_vasp(filename)
***************
*** 294,299 ****
--- 304,310 ----
      ASE bundle trajectory      bundle
      CUBE file                  cube
      XYZ-file                   xyz
+     GULP input file            gulp
      VASP POSCAR/CONTCAR file   vasp
      ABINIT input file          abinit
      Protein Data Bank          pdb
***************
*** 373,378 ****
--- 384,391 ----
          if filename == '-':
              format = 'xyz'
              filename = sys.stdout
+         elif '.gin' in filename or '.res' in filename:
+             format = 'gulp'
          elif 'POSCAR' in filename or 'CONTCAR' in filename:
              format = 'vasp'
          elif 'OUTCAR' in filename:
***************
*** 579,584 ****
--- 592,606 ----
      if filename.lower().endswith('.cfg'):
          return 'cfg'
  
+     if filename.lower().endswith('.gin'):
+         return 'gulp'
+         
+     if filename.lower().endswith('.res'):
+         return 'gulp'
+         
+     if filename.lower().endswith('.gout'):
+         return 'gulp_out'
+ 
      if os.path.split(filename)[1] == 'atoms.dat':
          return 'iwm'
  
